--------------------------------------
### Working directory ###
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella
--------------------------------------

--------------------------------------
--------------------------------------
### Aircraft Flight Loads ###
--------------------------------------
--------------------------------------

-----------------
### Current directory ###
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\initialization

Certification used from file.
Input File: Aircraft_test.xlsx

-----------------
### Current directory ###
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella
--------------------------------------
--------------------------------------
### Airworthiness regulations applied ###
CSVLA

--------------------------------------
--------------------------------------
-----------------
### Current directory ###
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla
-----------------
### Flight Envelope - per CS - VLA ###
--------------------------------------
--------------------------------------
### Standard atmosphere - Sea Level ###
--------------------------------------
Temperature [K]: 288.1500
Speed of sound [m/s]: 340.2941
Pressure [Pa]: 101325.0000
Density [kg/m^3]: 1.2250
----------------------------------------------------------------------------
--------------------------------------
### Standard atmosphere - Operative Ceiling ###
--------------------------------------
Temperature [K]: 279.7000
Speed of sound [m/s]: 335.2674
Pressure [Pa]: 86651.9492
Density [kg/m^3]: 1.0793
----------------------------------------------------------------------------
--------------------------------------
### Standard atmosphere - Theoretical Ceiling ###
--------------------------------------
Temperature [K]: 265.4000
Speed of sound [m/s]: 326.5845
Pressure [Pa]: 65764.0871
Density [kg/m^3]: 0.8632
-------------------------------------- WARNING: VH not available! 
 
 ++++ INPUT TO V - N DIAGRAM ++++
 ++++++++++ DATA USED TO PLOT V - N DIAGRAM ++++++++++ 
 VS+                VS-                 VA                VG
 19.974477          24.868023          38.937424          30.456984
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
 
 ++++++++++ DATA USED TO PLOT V - N DIAGRAM ++++++++++ 
 nmax                nmin                 VD                VE
 3.800000          -1.500000          58.386920          58.386920
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
[Warning: 'ContentType' parameter is ignored when it is set to 'vector' for image output.] 
--------------------------------------
### Saving outpus inside correct Folder ###
Saving Vndiagram.pdf in: 
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\Output
[Warning: 'ContentType' parameter is ignored when it is set to 'vector' for image output.] 
Saving Gustenvelope.pdf in: 
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\Output
 
 ++++++++++ FINAL ENVELOPE - VA AND nA ++++++++++ 
 VA1                nA1
 46.534769          5.427556
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
 
 CHECK: 
 Solutions are real numbers
 
 ++++++++++ FINAL ENVELOPE - VA AND nA ++++++++++ 
 Sol1                Sol2
 13.700235          45.139269
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
[Warning: 'ContentType' parameter is ignored when it is set to 'vector' for image output.] 
Saving Finalenvelope.pdf in: 
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\Output
-----------------
### Aero Model - per CS - VLA ###
-----------------
### Current directory ###
C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla
[Warning: Polynomial is not unique; degree >= number of data points.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('polyfit', 'C:\Program Files\MATLAB\R2021a\toolbox\matlab\polyfun\polyfit.m', 78)" style="font-weight:bold">polyfit</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2021a\toolbox\matlab\polyfun\polyfit.m',78,0)">line 78</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('CalcAeroModel', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\CalcAeroModel.m', 159)" style="font-weight:bold">CalcAeroModel</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\CalcAeroModel.m',159,0)">line 159</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ApplyRegulation', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\ApplyRegulation.m', 46)" style="font-weight:bold">ApplyRegulation</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\ApplyRegulation.m',46,0)">line 46</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('test', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\test.m', 116)" style="font-weight:bold">test</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\test.m',116,0)">line 116</a>)] 
 
 ++++ FIGURE 6 - LIFT CURVE INTERPOLATION ++++ 
[Warning: Polynomial is not unique; degree >= number of data points.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('polyfit', 'C:\Program Files\MATLAB\R2021a\toolbox\matlab\polyfun\polyfit.m', 78)" style="font-weight:bold">polyfit</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2021a\toolbox\matlab\polyfun\polyfit.m',78,0)">line 78</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('CalcAeroModel', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\CalcAeroModel.m', 205)" style="font-weight:bold">CalcAeroModel</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\CalcAeroModel.m',205,0)">line 205</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ApplyRegulation', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\ApplyRegulation.m', 46)" style="font-weight:bold">ApplyRegulation</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\ApplyRegulation.m',46,0)">line 46</a>)
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('test', 'C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\test.m', 116)" style="font-weight:bold">test</a> (<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\test.m',116,0)">line 116</a>)] 
<a href="matlab: opentoline('C:\Users\claum\OneDrive\Desktop\TesiMagistrale\tesi-magistrale-claudio-mirabella\csvla\CalcAeroModel.m',226,1)">226 </a>end
iscomplex 
{Unrecognized function or variable 'iscomplex'.
} 
help complex
    <strong>complex</strong> Create complex array.
    C = <strong>complex</strong>(A,B) returns the complex result A + Bi, where A and B are
    identically sized real N-D arrays, matrices, or scalars of the same data type.
    Note: In the event that B is all zeros, C is complex with all zero imaginary
    part, unlike the result of the addition A+0i, which returns a 
    strictly real result.
 
    C = <strong>complex</strong>(A) for real A returns the complex result C with real part A
    and all zero imaginary part. Even though its imaginary part is all zero,
    C is complex and so isreal(C) returns false. If A is complex, C is identical
    to A.
 
    The complex function provides a useful substitute for expressions such as
    A+1i*B or A+1j*B in cases when A and B are not single or double, or when
    B is all zero.
 
    See also  <a href="matlab:help i -displayBanner">i</a>, <a href="matlab:help j -displayBanner">j</a>, <a href="matlab:help imag -displayBanner">imag</a>, <a href="matlab:help conj -displayBanner">conj</a>, <a href="matlab:help angle -displayBanner">angle</a>, <a href="matlab:help abs -displayBanner">abs</a>, <a href="matlab:help real -displayBanner">real</a>, <a href="matlab:help isreal -displayBanner">isreal</a>.

    <a href="matlab:doc complex">Documentation for complex</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('complex')">Other functions named complex</a>

help isreal
 <strong>isreal</strong> True if input does not use complex storage.
    <strong>isreal</strong>(X) returns logical 1 (true) if X does not have an imaginary
    part, and logical 0 (false) otherwise. <strong>isreal</strong> returns logical 0 (false)
    for complex values that have zero imaginary part, since the value is
    still stored as a complex number.
 
    Some common related commands are:
 
    ~<strong>isreal</strong>(X) detects arrays that have an imaginary part, even if it is
    all zero.
 
    ~ANY(IMAG(X(:))) detects strictly real arrays, whether X has
    an all zero imaginary part allocated or not.
 
    Examples:
    1) x = magic(3);
       isreal(x)
 
       The result is true because x is not a complex array.
 
    2) y = complex(x);
       isreal(y)
 
       The result is false because COMPLEX returns y with an all zero
       imaginary part.
 
    See also <a href="matlab:help real -displayBanner">real</a>, <a href="matlab:help imag -displayBanner">imag</a>, <a href="matlab:help complex -displayBanner">complex</a>, <a href="matlab:help i -displayBanner">i</a>, <a href="matlab:help j -displayBanner">j</a>.

    <a href="matlab:doc isreal">Documentation for isreal</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('isreal')">Other functions named isreal</a>

if system_dependent('IsDebugMode')==1, dbquit all; end
